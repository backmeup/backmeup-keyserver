# BACKMEUP KEYSERVER SQL ----------------------------------------------------------

backmeup.keyserver.db.table = ENTRY

backmeup.keyserver.db.sql.create = CREATE TABLE {0} \
 (id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY CONSTRAINT {0}_pk PRIMARY KEY, \
  ekey VARCHAR(128) NOT NULL, \
  value BLOB, \
  keyringId INT NOT NULL, \
  version BIGINT NOT NULL DEFAULT 0, \
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, \
  last_modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, \
  ttl TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \
  CONSTRAINT {0}_ekey UNIQUE(ekey, version) \
 )

backmeup.keyserver.db.sql.put = INSERT INTO {0} \
 (ekey, value, keyringId, version, created_at, last_modified, ttl) \
 VALUES (?, ?, ?, ?, ?, ?, ?)
backmeup.keyserver.db.sql.updateTTL =  UPDATE {0} SET ttl = ?  \
 WHERE ekey = ? AND version = ?
backmeup.keyserver.db.sql.get = SELECT * FROM {0} \
 WHERE ekey = ? AND (ttl IS NULL OR ttl > CURRENT_TIMESTAMP) \
 ORDER BY version DESC FETCH FIRST ROW ONLY
backmeup.keyserver.db.sql.getWithVersion = SELECT * FROM {0} \
 WHERE ekey = ? AND version = ? AND (ttl IS NULL OR ttl > CURRENT_TIMESTAMP) 
backmeup.keyserver.db.sql.searchByKey = SELECT * FROM {0} \
 WHERE ekey LIKE ? AND (ttl IS NULL OR ttl > CURRENT_TIMESTAMP) \
 ORDER BY ekey ASC, version DESC
backmeup.keyserver.db.sql.searchByKeyWithExpired = SELECT * FROM {0} \
 WHERE ekey LIKE ? \
 ORDER BY ekey ASC, version DESC
